// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScheduleApp.Data;


#nullable disable

namespace ScheduleApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScheduleApp.Models.ClassItem", b =>
                {
                    b.Property<int>("ClassItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassItemID"));

                    b.Property<int?>("ClassSemesterClassId")
                        .HasColumnType("int");

                    b.Property<int?>("DayId")
                        .HasColumnType("int");

                    b.Property<int?>("WeeksId")
                        .HasColumnType("int");

                    b.HasKey("ClassItemID");

                    b.HasIndex("ClassSemesterClassId");

                    b.HasIndex("DayId");

                    b.HasIndex("WeeksId");

                    b.ToTable("ClassItems");
                });

            modelBuilder.Entity("ScheduleApp.Models.Day", b =>
                {
                    b.Property<int>("DayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DayId"));

                    b.Property<int?>("ScheduleItemId")
                        .HasColumnType("int");

                    b.Property<string>("day")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DayId");

                    b.HasIndex("ScheduleItemId");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("ScheduleApp.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ScheduleApp.Models.SearchByGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<bool?>("Disable")
                        .HasColumnType("bit");

                    b.Property<int?>("ScheduleItemId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId");

                    b.HasIndex("ScheduleItemId")
                        .IsUnique()
                        .HasFilter("[ScheduleItemId] IS NOT NULL");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("ScheduleApp.Models.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonId"));

                    b.Property<string>("LessonType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkToMeeting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectForSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("LessonId");

                    b.HasIndex("RoomId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("ScheduleApp.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ScheduleApp.Models.Root", b =>
                {
                    b.Property<int>("RootId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RootId"));

                    b.HasKey("RootId");

                    b.ToTable("Roots");
                });

            modelBuilder.Entity("ScheduleApp.Models.ScheduleItem", b =>
                {
                    b.Property<int>("ScheduleItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleItemId"));

                    b.Property<int?>("RootId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleItemId");

                    b.HasIndex("RootId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("ScheduleApp.Models.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<bool>("CurrentSemester")
                        .HasColumnType("bit");

                    b.Property<bool>("DefaultSemester")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<string>("EndDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RootId")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("SemesterDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("SemesterId");

                    b.HasIndex("RootId")
                        .IsUnique();

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("ScheduleApp.Models.SemesterClass", b =>
                {
                    b.Property<int>("SemesterClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterClassId"));

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("int");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SemesterClassId");

                    b.HasIndex("SemesterId");

                    b.ToTable("SemesterClasses");
                });

            modelBuilder.Entity("ScheduleApp.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("ScheduleApp.Models.Weeks", b =>
                {
                    b.Property<int>("WeeksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WeeksId"));

                    b.Property<int?>("EvenLessonId")
                        .HasColumnType("int");

                    b.Property<int?>("OddLessonId")
                        .HasColumnType("int");

                    b.HasKey("WeeksId");

                    b.HasIndex("EvenLessonId");

                    b.HasIndex("OddLessonId");

                    b.ToTable("Weeks");
                });

            modelBuilder.Entity("ScheduleApp.Models.ClassItem", b =>
                {
                    b.HasOne("ScheduleApp.Models.SemesterClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassSemesterClassId");

                    b.HasOne("ScheduleApp.Models.Day", null)
                        .WithMany("Classes")
                        .HasForeignKey("DayId");

                    b.HasOne("ScheduleApp.Models.Weeks", "Weeks")
                        .WithMany()
                        .HasForeignKey("WeeksId");

                    b.Navigation("Class");

                    b.Navigation("Weeks");
                });

            modelBuilder.Entity("ScheduleApp.Models.Day", b =>
                {
                    b.HasOne("ScheduleApp.Models.ScheduleItem", null)
                        .WithMany("Days")
                        .HasForeignKey("ScheduleItemId");
                });

            modelBuilder.Entity("ScheduleApp.Models.SearchByGroup", b =>
                {
                    b.HasOne("ScheduleApp.Models.ScheduleItem", "ScheduleItem")
                        .WithOne("SearchByGroup")
                        .HasForeignKey("ScheduleApp.Models.SearchByGroup", "ScheduleItemId");

                    b.Navigation("ScheduleItem");
                });

            modelBuilder.Entity("ScheduleApp.Models.Lesson", b =>
                {
                    b.HasOne("ScheduleApp.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.HasOne("ScheduleApp.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.Navigation("Room");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ScheduleApp.Models.ScheduleItem", b =>
                {
                    b.HasOne("ScheduleApp.Models.Root", null)
                        .WithMany("Schedule")
                        .HasForeignKey("RootId");
                });

            modelBuilder.Entity("ScheduleApp.Models.Semester", b =>
                {
                    b.HasOne("ScheduleApp.Models.Root", "Root")
                        .WithOne("Semester")
                        .HasForeignKey("ScheduleApp.Models.Semester", "RootId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Root");
                });

            modelBuilder.Entity("ScheduleApp.Models.SemesterClass", b =>
                {
                    b.HasOne("ScheduleApp.Models.Semester", null)
                        .WithMany("SemesterClasses")
                        .HasForeignKey("SemesterId");
                });

            modelBuilder.Entity("ScheduleApp.Models.Teacher", b =>
                {
                    b.HasOne("ScheduleApp.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ScheduleApp.Models.Weeks", b =>
                {
                    b.HasOne("ScheduleApp.Models.Lesson", "Even")
                        .WithMany()
                        .HasForeignKey("EvenLessonId");

                    b.HasOne("ScheduleApp.Models.Lesson", "Odd")
                        .WithMany()
                        .HasForeignKey("OddLessonId");

                    b.Navigation("Even");

                    b.Navigation("Odd");
                });

            modelBuilder.Entity("ScheduleApp.Models.Day", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("ScheduleApp.Models.Root", b =>
                {
                    b.Navigation("Schedule");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("ScheduleApp.Models.ScheduleItem", b =>
                {
                    b.Navigation("Days");

                    b.Navigation("SearchByGroup");
                });

            modelBuilder.Entity("ScheduleApp.Models.Semester", b =>
                {
                    b.Navigation("SemesterClasses");
                });
#pragma warning restore 612, 618
        }
    }
}
